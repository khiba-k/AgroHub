generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public"]
}

enum FarmRole {
  ADMIN
  MEMBER

  @@schema("public")
}

model Farm {
  id             String   @id @default(uuid()) @db.Uuid
  name           String   @unique
  description    String
  district       String
  country        String
  contactNumber1 String
  contactNumber2 String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  farmUsers FarmUser[]
  produceListings  ProduceListing[]

  @@map("farms")
  @@schema("public")
}

model FarmUser {
  id     String   @id @default(uuid()) @db.Uuid
  farmId String   @db.Uuid
  userId String   @db.Uuid
  role   FarmRole @default(MEMBER)

  farm Farm @relation(fields: [farmId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@unique([farmId, userId])
  @@map("farm_users")
  @@schema("public")
}

model AgroHubUser{
  id         String    @id @default(uuid()) @db.Uuid
  firstname  String    @unique
  lastname   String    @unique
  userId     String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt


  @@map("agrohub_users")
  @@schema("public")
}

model PasswordResetToken {
  id         String   @id @default(uuid()) @db.Uuid
  tokenHash  String
  email      String
  expiresAt  DateTime
  used       Boolean  @default(false)
  createdAt  DateTime @default(now())

  @@map("password_reset_tokens")
  @@schema("public")
}

model Produce {
  id           String @id @default(uuid()) @db.Uuid
  category     String
  name         String
  type         String
  unitType     String
  pricePerUnit String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listings ProduceListing[]

  @@map("produce")
  @@schema("public")
}

model ListingImg {
  id        String    @id @default(uuid()) @db.Uuid
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listingId String    @db.Uuid
  listing   ProduceListing @relation(fields: [listingId], references: [id])

  @@map("listing_imgs")
  @@schema("public")

}

enum ListingStatus {
  active
  harvest
  draft

  @@schema("public")
}

model ProduceListing {
  id          String    @id @default(uuid()) @db.Uuid
  location    String
  description String
  quantity    Int
  status      ListingStatus 
  harvestDate DateTime?

  produceId   String    @db.Uuid
  produce     Produce   @relation(fields: [produceId], references: [id])

  farmId      String @db.Uuid
  farm        Farm      @relation(fields: [farmId], references: [id])

  images      ListingImg[]

  @@map("produce_listings")
  @@schema("public")
}

